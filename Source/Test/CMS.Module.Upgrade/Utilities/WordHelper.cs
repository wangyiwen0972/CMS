//Filename: WordHelper.cs
//
//Description:
//<A brief description of the module, its purpose and functionality.>
//
//Creator: v-ragene
//Creation Date: 7/21/2007 12:19:14 PM
//--------------------------------------------------------------------------
//Change History:
//
//Version       Date        Author          Description
//
//  1           5/09/07     v-ragene         Initial Version.
//--------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Text;
using MSWord = Microsoft.Office.Interop.Word;
using Microsoft.Office.Core;
using System.Reflection;
using System.Globalization;
using System.Xml.XPath;
using System.Xml;

namespace Microsoft.STB.WSDUA.DxEditor.UpdateFramework
{
    /// <summary>
    /// Contains utility functions to interact with Word DOM
    /// </summary>
    public static class WordHelper 
    {
        #region Private Variables

        private const string LOGERRORRETRIEVINGSCHEMA = "Error retrieving SchemaName property from document.";
        private const string WORDSCHAMEPROPERTYXPATHCONFIGSETTING = "WordSchemaPropertyXPath";
        private const string PKG="pkg";
        private const string PKGVALUE="http://schemas.microsoft.com/office/2006/xmlPackage";
        private const string CUSTOMPROPERTIES="custom-properties";
        private const string CUSTOMPROPERTIESVALUE="http://schemas.openxmlformats.org/officeDocument/2006/custom-properties";
        private const string VT="vt";
        private const string VTVALUE="http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes";
        private const string INVALIDDXEDITORDOCUMENT = "{0} is not a valid DxEditor document";
        private const string IGNOREPASSWORDERROR = "Invalid character in the given encoding. Line 1, position 1.";

        private static string _wordSchemaPropertyXpath;

        #endregion

        #region Constructors
  
        #endregion

        #region Public Methods
        /// <summary>
        /// Retrieves the schema name associated to the document associated with this class
        /// </summary>
        /// <returns>Schema name associated to the document</returns>
        public static string RetrieveSchemaName(string documentPath)
        {
            try
            {
                XPathDocument xpathDocument = new XPathDocument(documentPath);
                
                XPathNavigator navigator = xpathDocument.CreateNavigator();

                XmlNamespaceManager namespaceManager = new XmlNamespaceManager(navigator.NameTable);
                namespaceManager.AddNamespace(PKG, PKGVALUE);
                namespaceManager.AddNamespace(CUSTOMPROPERTIES, CUSTOMPROPERTIESVALUE);
                namespaceManager.AddNamespace(VT, VTVALUE);
                XPathNodeIterator iterator = navigator.Select(WordSchemaPropertyXpath, namespaceManager);

                return (iterator.MoveNext()) ? iterator.Current.Value : String.Empty;
            }
            catch (XmlException e)
            {
                //Ignore the error generated by attempting to open a password
                //protected document. Bug 1261.
                if (e.Message.Contains(IGNOREPASSWORDERROR))
                {
                    return String.Empty;
                }
                else
                {
                    throw new UpdateFrameworkException(String.Format(INVALIDDXEDITORDOCUMENT, documentPath), e);
                }
            }
        }

        #endregion

        #region Helper Functions
        /// <summary>
        /// Gets the Xpath for retrieving the schema property from a word xml document
        /// </summary>
        private static string WordSchemaPropertyXpath
        {
            get 
            {
                if (String.IsNullOrEmpty(_wordSchemaPropertyXpath))
                {
                    ConfigurationManager configManager = new ConfigurationManager();
                    _wordSchemaPropertyXpath=configManager.ReadAppSettings(WORDSCHAMEPROPERTYXPATHCONFIGSETTING);
                }
                return _wordSchemaPropertyXpath; 
            }
        }

        #endregion



    }
}
